{"version":3,"file":"manual-frontend-test-CKBo8Bw6.js","sources":["../../src/test/manual-frontend-test.ts"],"sourcesContent":["// Manual frontend test for browser functionality\n// „Éñ„É©„Ç¶„Ç∂„Åß„ÅÆÊâãÂãï„ÉÜ„Çπ„ÉàÁî®„Çπ„ÇØ„É™„Éó„Éà\n\nimport { SolanaService } from '../solana';\nimport { GameService } from '../services/game-service';\nimport { logger } from '../logger';\nimport { config } from '../config';\n\n// Simple manual test to verify frontend functionality\nexport async function runManualFrontendTest() {\n  console.log('üéØ Manual Frontend Test Starting...');\n  \n  try {\n    // Test 1: Configuration loading\n    console.log('‚úÖ Config loaded:', {\n      programId: config.programId,\n      network: config.network,\n      rpcUrl: config.rpcUrl.includes('api-key') ? config.rpcUrl.split('?')[0] + '?api-key=***' : config.rpcUrl\n    });\n\n    // Test 2: SolanaService initialization\n    const solanaService = new SolanaService();\n    const networkInfo = solanaService.getNetworkInfo();\n    console.log('‚úÖ SolanaService initialized:', networkInfo);\n\n    // Test 3: RPC connection test\n    console.log('üîó Testing RPC connection...');\n    const connectionTest = await solanaService.testConnection();\n    console.log('‚úÖ RPC Connection:', connectionTest ? 'Success' : 'Failed');\n\n    // Test 4: GameService initialization\n    new GameService(solanaService);\n    console.log('‚úÖ GameService initialized');\n\n    // Test 5: Logger functionality\n    logger.info('üß™ Testing logger functionality');\n    logger.success('‚úÖ Logger working correctly');\n    \n    console.log('üéâ All manual tests passed!');\n    return true;\n  } catch (error) {\n    console.error('‚ùå Manual test failed:', error);\n    return false;\n  }\n}\n\n// Export for browser console usage\nif (typeof window !== 'undefined') {\n  (window as any).runManualFrontendTest = runManualFrontendTest;\n  console.log('üí° Run \"runManualFrontendTest()\" in browser console to test frontend');\n}"],"names":["runManualFrontendTest","config","solanaService","SolanaService","networkInfo","connectionTest","GameService","logger","error"],"mappings":"6DASA,eAAsBA,GAAwB,CAC5C,QAAQ,IAAI,qCAAqC,EAE7C,GAAA,CAEF,QAAQ,IAAI,mBAAoB,CAC9B,UAAWC,EAAO,UAClB,QAASA,EAAO,QAChB,OAAQA,EAAO,OAAO,SAAS,SAAS,EAAIA,EAAO,OAAO,MAAM,GAAG,EAAE,CAAC,EAAI,eAAiBA,EAAO,MAAA,CACnG,EAGK,MAAAC,EAAgB,IAAIC,EACpBC,EAAcF,EAAc,eAAe,EACzC,QAAA,IAAI,+BAAgCE,CAAW,EAGvD,QAAQ,IAAI,8BAA8B,EACpC,MAAAC,EAAiB,MAAMH,EAAc,eAAe,EAC1D,eAAQ,IAAI,oBAAqBG,EAAiB,UAAY,QAAQ,EAGtE,IAAIC,EAAYJ,CAAa,EAC7B,QAAQ,IAAI,2BAA2B,EAGvCK,EAAO,KAAK,iCAAiC,EAC7CA,EAAO,QAAQ,4BAA4B,EAE3C,QAAQ,IAAI,6BAA6B,EAClC,SACAC,EAAO,CACN,eAAA,MAAM,wBAAyBA,CAAK,EACrC,EAAA,CAEX,CAGI,OAAO,OAAW,MACnB,OAAe,sBAAwBR,EACxC,QAAQ,IAAI,sEAAsE"}