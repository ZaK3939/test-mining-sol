# WEED Farm Game - 完全仕様書 (kaisetsu.txt)

## 🌾 プログラム概要

**Program ID:** `FA1xdxZNykyJaMsuSekWJrUzwY8PVh1Usn7mR8eWmw5B`

Solana blockchain上で動作する$WEED（大麻）をテーマにした農場シミュレーションゲーム。
プレイヤーは農場スペースを購入し、様々な種を植えることで$WEEDトークンを獲得する。
多段階紹介システム、ミステリーシードパック、農場アップグレードシステムを統合した経済ゲーム。

---

## 🏗️ アーキテクチャ

### コアモジュール構成
```
programs/facility-game/src/
├── lib.rs              # エントリーポイント（21個の命令定義）
├── state.rs            # 10個のアカウント構造体定義
├── error.rs            # 28個のカスタムエラー定義
├── utils.rs            # 計算・検証・ヘルパー関数群
└── instructions/       # 命令実装の分割モジュール
    ├── admin.rs        # システム管理機能
    ├── user.rs         # ユーザー管理
    ├── farm.rs         # 農場管理
    ├── rewards.rs      # 報酬・紹介システム
    ├── transfer.rs     # トークン転送
    ├── seeds.rs        # シード・パック管理
    ├── invite.rs       # 招待システム
    └── meteora.rs      # DEX統合
```

### PDA (Program Derived Address) 設計
```
config:              ["config"]
global_stats:        ["global_stats"]
user_state:          ["user", user_pubkey]
farm_space:          ["farm_space", user_pubkey]
seed:                ["seed", user_pubkey, seed_id]
seed_storage:        ["seed_storage", user_pubkey]
seed_pack:           ["seed_pack", user_pubkey, pack_id]
invite_code:         ["invite_code", code]
reward_mint:         ["reward_mint"]
mint_authority:      ["mint_authority"]
fee_pool:            ["fee_pool"]
```

---

## 💰 経済設計

### トークン仕様
- **名称:** $WEED
- **精度:** 6桁（1 WEED = 1,000,000 units）
- **総供給量:** 10億WEED
- **用途:** ゲーム内通貨、農場アップグレード、ミステリーパック購入

### 基本経済パラメータ
```rust
BASE_RATE: 100 WEED/秒         // 初期報酬レート
HALVING_INTERVAL: 6日          // 半減期間隔
FARM_COST: 0.5 SOL            // 農場購入コスト
SEED_PACK_COST: 300 WEED      // ミステリーパック価格
TRADING_FEE: 2%               // 取引手数料
```

### 報酬計算式
```
ユーザー報酬 = (ユーザーGrow Power / 全体Grow Power) × 基本レート × 経過時間
```

### 半減機構
- 6日ごとに基本レートが半減
- 複数の半減期をまたぐ期間の報酬は正確に分割計算
- 長期的な持続可能性を確保

---

## 🚜 農場システム

### 農場スペース仕様
| レベル | 容量 | アップグレードコスト | ROI効率 |
|--------|------|---------------------|---------|
| 1      | 4    | -                   | -       |
| 2      | 8    | 3,500 WEED         | 875 WEED/slot |
| 3      | 12   | 18,000 WEED        | 4,500 WEED/slot |
| 4      | 16   | 20,000 WEED        | 5,000 WEED/slot |
| 5      | 20   | 25,000 WEED        | 6,250 WEED/slot |

### アップグレードシステム
- **クールダウン:** 24時間
- **プロセス:** 
  1. アップグレード開始（WEEDバーン）
  2. 24時間待機
  3. アップグレード完了実行

### 初期付与
- 農場購入時にSeed1を無料付与（100 Grow Power）
- レベル1農場（容量4）から開始

---

## 🌱 シードシステム

### シード種類と確率
| シード | Grow Power | 出現確率 | 投資効率 |
|--------|------------|----------|----------|
| Seed1  | 100        | 42.23%   | -70% ROI |
| Seed2  | 180        | 24.44%   | -40% ROI |
| Seed3  | 420        | 13.33%   | +40% ROI |
| Seed4  | 720        | 8.33%    | +140% ROI |
| Seed5  | 1,000      | 5.56%    | +233% ROI |
| Seed6  | 5,000      | 3.33%    | +1567% ROI |
| Seed7  | 15,000     | 1.33%    | +4900% ROI |
| Seed8  | 30,000     | 0.89%    | +9900% ROI |
| Seed9  | 60,000     | 0.56%    | +19900% ROI |

### ミステリーパック
- **コスト:** 300 WEED（100%バーン）
- **仕組み:** 購入時にランダムシード設定、開封時に確定
- **戦略性:** 高リスク・高リターンのギャンブル要素

### シード管理
- **ストレージ:** ユーザーあたり最大100シード
- **植え付け:** 農場容量内でのみ可能
- **取り外し:** いつでも可能（Grow Powerは即座に反映）

---

## 🌐 多段階紹介システム

### 紹介報酬構造
- **Level 1（直接紹介）:** 10%
- **Level 2（間接紹介）:** 5%
- **プロトコル除外:** 特定アドレスは報酬対象外

### 招待コードシステム
- **コード形式:** 8バイト英数字
- **初期限度:** ユーザーあたり5人
- **拡張可能:** 管理者による上限増加

### 報酬分配
```
紹介者への報酬 = 被紹介者の獲得報酬 × 紹介レベル別％
```

---

## 🎯 戦略的ユーザーアーキタイプ

### 1. Network Builder（紹介ネットワーカー）
```
特徴: 多段階紹介チェーン構築
ROI期間: 14-21日
リスク: 低
持続可能性: 最高
最適対象: 社交的プレイヤー
```

### 2. Gambler（ギャンブル投資家）
```
特徴: ミステリーパック集中投資
ROI期間: 1-7日（運次第）
リスク: 極高
結果振幅: -70% ～ +19900%
最適対象: リスク許容度の高いプレイヤー
```

### 3. Farmer（農場拡張主義者）
```
特徴: 段階的農場アップグレード
ROI期間: 7-14日
リスク: 低
効率: Level1→2が最高（875 WEED/slot）
最適対象: 保守的プレイヤー
```

### 4. Strategist（複合戦略家）
```
特徴: 動的投資配分
ROI期間: 10-14日
フェーズ別配分:
  - 初期: 招待40% + Mystery20% + Upgrade40%
  - 中期: 招待20% + Mystery30% + Upgrade50%
  - 後期: 招待10% + Mystery40% + Upgrade50%
最適対象: 経験豊富な最適化プレイヤー
```

---

## ⚡ 重要な意思決定ポイント

### 300 WEED閾値
```
選択肢A: ミステリーパック購入（高リスク・高リターン）
選択肢B: アップグレード資金として貯蓄（確実な進歩）
最適解: 現在のGrow Powerとリスク許容度に依存
```

### 3,500 WEED閾値
```
選択肢A: Level1→2アップグレード（容量100%増加）
選択肢B: 11-12個のミステリーパック（潜在的大幅成長）
最適解: 基盤構築としてアップグレード優先、その後パック
```

### 紹介ネットワーク規模別戦略
```
1-2紹介: 個人成長重視
3-5紹介: バランス型アプローチ  
5+紹介: ネットワーク効果活用
```

---

## 📋 完全命令セット（21個）

### 管理者専用命令
1. `initialize_config` - システム設定初期化
2. `create_reward_mint` - $WEEDトークン作成
3. `initialize_global_stats` - 統計初期化
4. `initialize_fee_pool` - 手数料プール初期化
5. `expand_invite_limit` - 招待限度拡張
6. `update_meteora_config` - DEX設定更新
7. `convert_fees_to_sol` - 手数料→SOL変換

### ユーザー機能
8. `init_user` - ユーザー初期化
9. `buy_farm_space` - 農場スペース購入
10. `upgrade_farm_space` - 農場アップグレード開始
11. `complete_farm_space_upgrade` - アップグレード完了
12. `claim_reward` - 報酬請求

### 紹介システム
13. `create_invite_code` - 招待コード作成
14. `use_invite_code` - 招待コード使用
15. `distribute_referral_reward` - 紹介報酬分配
16. `distribute_referral_on_claim` - 請求時紹介報酬
17. `claim_referral_rewards` - 紹介報酬請求

### シード・パックシステム
18. `initialize_seed_storage` - シードストレージ初期化
19. `purchase_seed_pack` - ミステリーパック購入
20. `open_seed_pack` - パック開封
21. `plant_seed` - シード植え付け
22. `remove_seed` - シード取り外し

### 取引機能
23. `transfer_with_fee` - 手数料付き転送

---

## 🏛️ アカウント構造体（10種類）

### 1. Config - グローバル設定
```rust
pub struct Config {
    pub base_rate: u64,                    // 基本報酬レート
    pub halving_interval: i64,             // 半減期間隔
    pub next_halving_time: i64,            // 次回半減期
    pub admin: Pubkey,                     // 管理者
    pub treasury: Pubkey,                  // トレジャリー
    pub seed_pack_cost: u64,               // パックコスト
    pub seed_counter: u64,                 // シードカウンター
    pub seed_pack_counter: u64,            // パックカウンター
    pub farm_space_cost_sol: u64,          // 農場コスト
    pub max_invite_limit: u8,              // 招待上限
    pub trading_fee_percentage: u8,        // 取引手数料
    pub protocol_referral_address: Pubkey, // プロトコルアドレス
    pub reserve: [u8; 2],                  // 予約
}
```

### 2. UserState - ユーザー状態
```rust
pub struct UserState {
    pub owner: Pubkey,                   // 所有者
    pub total_grow_power: u64,           // 総Grow Power
    pub last_harvest_time: i64,          // 最終収穫時刻
    pub has_farm_space: bool,            // 農場所有フラグ
    pub referrer: Option<Pubkey>,        // 紹介者
    pub pending_referral_rewards: u64,   // 未請求紹介報酬
    pub reserve: [u8; 32],               // 予約
}
```

### 3. FarmSpace - 農場スペース
```rust
pub struct FarmSpace {
    pub owner: Pubkey,                   // 所有者
    pub level: u8,                       // レベル（1-5）
    pub capacity: u8,                    // 最大容量
    pub seed_count: u8,                  // 現在のシード数
    pub total_grow_power: u64,           // 総Grow Power
    pub upgrade_start_time: i64,         // アップグレード開始時刻
    pub upgrade_target_level: u8,        // 目標レベル
    pub reserve: [u8; 32],               // 予約
}
```

### 4. Seed - シード
```rust
pub struct Seed {
    pub owner: Pubkey,                   // 所有者
    pub seed_type: SeedType,             // シード種類
    pub grow_power: u64,                 // Grow Power
    pub is_planted: bool,                // 植え付けフラグ
    pub planted_farm_space: Option<Pubkey>, // 植え付け先
    pub created_at: i64,                 // 作成時刻
    pub seed_id: u64,                    // ユニークID
    pub reserve: [u8; 32],               // 予約
}
```

### 5. SeedPack - シードパック
```rust
pub struct SeedPack {
    pub purchaser: Pubkey,               // 購入者
    pub purchased_at: i64,               // 購入時刻
    pub cost_paid: u64,                  // 支払い額
    pub is_opened: bool,                 // 開封フラグ
    pub random_seed: u64,                // ランダムシード
    pub pack_id: u64,                    // パックID
    pub reserve: [u8; 32],               // 予約
}
```

### 6. InviteCode - 招待コード
```rust
pub struct InviteCode {
    pub inviter: Pubkey,                 // 招待者
    pub invites_used: u8,                // 使用済み数
    pub invite_limit: u8,                // 招待上限
    pub code: [u8; 8],                   // コード
    pub created_at: i64,                 // 作成時刻
    pub reserve: [u8; 32],               // 予約
}
```

### 7. GlobalStats - グローバル統計
```rust
pub struct GlobalStats {
    pub total_grow_power: u64,           // 総Grow Power
    pub total_farm_spaces: u64,          // 総農場数
    pub total_supply: u64,               // 総供給量
    pub current_rewards_per_second: u64, // 現在の秒間報酬
    pub last_update_time: i64,           // 最終更新時刻
    pub reserve: [u8; 32],               // 予約
}
```

### 8. FeePool - 手数料プール
```rust
pub struct FeePool {
    pub accumulated_fees: u64,           // 蓄積手数料
    pub treasury_address: Pubkey,        // トレジャリーアドレス
    pub last_collection_time: i64,       // 最終徴収時刻
    pub reserve: [u8; 48],               // 予約
}
```

### 9. SeedStorage - シードストレージ
```rust
pub struct SeedStorage {
    pub owner: Pubkey,                   // 所有者
    pub seed_ids: Vec<u64>,              // シードID配列
    pub total_seeds: u16,                // 総シード数
    pub reserve: [u8; 32],               // 予約
}
```

### 10. RewardAccount - 報酬アカウント
```rust
pub struct RewardAccount {
    pub user: Pubkey,                    // ユーザー
    pub claimable_amount: u64,           // 請求可能額
    pub last_harvest_time: i64,          // 最終収穫時刻
    pub referral_rewards_l1: u64,        // L1紹介報酬
    pub referral_rewards_l2: u64,        // L2紹介報酬
    pub reserve: [u8; 32],               // 予約
}
```

---

## 🛠️ ユーティリティ機能

### 計算関数
- `calculate_reward` - 基本報酬計算
- `calculate_user_share_of_global_rewards` - ユーザーシェア計算
- `calculate_user_rewards_across_halving` - 半減期跨ぎ報酬計算
- `calculate_referral_rewards` - 紹介報酬計算（L1: 10%, L2: 5%）
- `calculate_transfer_fee` - 転送手数料計算（2%）

### 検証関数
- `validate_user_ownership` - ユーザー所有権検証
- `validate_token_balance` - トークン残高検証
- `validate_farm_space_capacity` - 農場容量検証
- `validate_has_grow_power` - Grow Power検証

### ヘルパー関数
- `mint_tokens_to_user` - ユーザーへのトークンミント
- `transfer_tokens_with_cpi` - CPI経由トークン転送
- `generate_seed_pack_random` - パック用ランダム生成
- `determine_seed_type_from_random` - ランダム値からシード種類決定

---

## 🔒 セキュリティ機能

### アクセス制御
- 全ユーザーアクションに署名要求
- 管理者機能の明確な分離
- PDAによる決定論的アドレス生成

### 計算保護
- checked演算によるオーバーフロー防止
- 128bit演算による中間計算の精度保証
- 分母ゼロチェック

### 状態保護
- アカウント初期化済みチェック
- 容量制限の厳格な検証
- 重複操作の防止

---

## 🚀 高度な機能

### Meteora DEX統合
- 蓄積された取引手数料の自動SOL変換
- プール設定の動的更新機能
- 流動性プールとの相互運用

### 動的経済システム
- グローバル統計によるリアルタイム調整
- 半減期による長期インフレ制御
- ユーザー行動に基づく報酬分配

### 拡張可能設計
- 全アカウントに予約領域確保
- モジュラー命令実装
- 段階的機能追加対応

---

## 📊 メタ戦略洞察

### ゲーム理論的分析
```
早期採用者優位: 半減機構により初期参入者が有利
ネットワーク効果: 紹介システムによる指数的成長
リスク分散: 複数戦略の組み合わせが最適
適応性: ゲーム状態変化への戦略調整が重要
```

### 長期成功要因
```
🎯 多段階紹介チェーンの構築（2+レベル）
🎯 ミステリーパック投資（Seed3+で収益性確保）
🎯 アップグレードタイミング（クールダウン同期）
🎯 再投資による複利効果の活用
```

---

## 🎮 ゲームプレイフロー

### 1. 初期参入
```
1. ユーザー初期化（紹介者設定可能）
2. 0.5 SOLで農場スペース購入
3. 初期Seed1（100 Grow Power）付与
4. 報酬蓄積開始
```

### 2. 成長期
```
1. 定期的な報酬請求
2. 300 WEED閾値での戦略選択
3. 紹介活動開始
4. 3,500 WEED でのアップグレード検討
```

### 3. 拡張期
```
1. Level2農場への移行（容量倍増）
2. ミステリーパック投資の本格化
3. 多段階紹介ネットワーク構築
4. 高レベルアップグレード計画
```

### 4. 最適化期
```
1. 動的投資配分の実行
2. 市場状況に応じた戦略調整
3. DEX機能の活用
4. 持続的成長の維持
```

---

このWEED Farm Gameは、Solana上で最も高度で戦略的な農場シミュレーションゲームの一つであり、
DeFi要素、ゲーミフィケーション、ソーシャル機能を完璧に統合した革新的な経済エコシステムです。